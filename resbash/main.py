import api
import json
from random import randint
from flask import Flask
from flask import request
app = Flask(__name__)

IMAGE_TOKEN = 'AgAAAAAkiWDYAAT7owzE7VLXTEEukUZVVqOY9No'


@app.route('/post', methods=['POST'])
def main():
    ## –°–æ–∑–¥–∞–µ–º –æ—Ç–≤–µ—Ç
    response = {
        'session': request.json['session'],
        'version': request.json['version'],
        'response': {
            'end_session': False
        }
    }
    ## –ó–∞–ø–æ–ª–Ω—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    handle_dialog(response, request.json)
    return json.dumps(response)


def handle_dialog(res,req):
    if req['request']['type'] == 'ButtonPressed':
        if req['request']['payload']['text'] == '–°–ª—É—á–∞–π–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å':
            with open('out_pars.json') as f:
                pars_file = json.load(f)
            nams = randint(6,14)

            res['response'].update({'text':pars_file['news']['news-titel'][nams],'tts':pars_file['news']['news-titel'][nams]})
            image = {'card':{'button':{'text':'text','url':pars_file['news']['news-link'][nams]},
            'type':'BigImage',
            'image_id': pars_file['news']['news-imgId'][nams],
            'title': pars_file['news']['news-titel'][nams],
            'discription':pars_file['news']['news-titel'][nams]},}

            res['response'].update(image)
            
        elif req['request']['payload']['text'] == '–ü–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏':
            with open('out_pars.json') as f:
                pars_file = json.load(f)
            last_news={'text':'–ü–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏',
                'card':{'type':'ItemsList','header':{'text':'–ü–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏'},'items':[]}
            }

            for i in range(5):
                k = {
                    'button':{'text':pars_file['news']['news-titel'][i],'url':pars_file['news']['news-link'][i]},
                    'title':pars_file['news']['news-titel'][i],
                    'tts':pars_file['news']['news-titel'][i],
                    'image_id':pars_file['news']['news-imgId'][i]}
                last_news['card']['items'].append(k)
            res['response'].update(last_news)

        elif req['request']['payload']['text'] == '–°–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–º–µ—Ä':
            with open('out_pars.json') as f:
                pars_file = json.load(f)
            last_news={'text':'–ü–æ—Å–ª–µ–¥–Ω–∏–π –Ω–æ–º–µ—Ä',
                'card':{'type':'ItemsList','header':{'text':'–ü–æ—Å–ª–µ–¥–Ω–∏–π –Ω–æ–º–µ—Ä'},'items':[]}
            }
            if len(pars_file['stat']['stat-link'])>0:
                for i in range(5):
                    k = {
                        'button':{'text':pars_file['stat']['stat-titel'][i],'url':pars_file['stat']['stat-link'][i]},
                        'title':pars_file['stat']['stat-titel'][i],
                        'discription':pars_file['stat']['stat-lid'][i],
                        'tts': str(pars_file['stat']['stat-titel'][i])+'. '+str(pars_file['stat']['stat-lid'][i]),
                        'image_id':pars_file['stat']['stat-imgId'][i]}
                    last_news['card']['items'].append(k)
                res['response'].update(last_news)
            else:
                res['response']['text'] = '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ–º–µ—Ä –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤üò•'

    else:
        text = req['request']['original_utterance']
        if text == '–°–ª—É—á–∞–π–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å' or text == '—Å–ª—É—á–∞–π–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å' or text == '–ù–æ–≤–æ—Å—Ç—å' or text == '–Ω–æ–≤–æ—Å—Ç—å' or text == 'üé≤':

            with open('out_pars.json') as f:
                pars_file = json.load(f)
            nams = randint(6,14)

            res['response'].update({'text':pars_file['news']['news-titel'][nams],'tts':'text'})
            image = {'card':{'button':{'text':'text','url':pars_file['news']['news-link'][nams]},
            'type':'BigImage',
            'image_id': pars_file['news']['news-imgId'][nams],
            'title': pars_file['news']['news-titel'][nams],
            'discription':pars_file['news']['news-titel'][nams]},}

            res['response'].update(image)

        elif text == '–ü–æ—Å–ª–µ–¥–Ω–∏–π –Ω–æ–º–µ—Ä' or text == '–Ω–æ–º–µ—Ä' or text == '–ù–æ–º–µ—Ä' or text == '–ü–æ–∫–∞–∂–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –Ω–æ–º–µ—Ä' or text == '–†–∞—Å–∫–∞–∂–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –Ω–æ–º–µ—Ä' or text == '–°—Ç–∞—Ç—å–∏' or text == '—Å—Ç–∞—Ç—å–∏':
            with open('out_pars.json') as f:
                pars_file = json.load(f)
            last_news={'text':'–ü–æ—Å–ª–µ–¥–Ω–∏–π –Ω–æ–º–µ—Ä',
                'card':{'type':'ItemsList','header':{'text':'–ü–æ—Å–ª–µ–¥–Ω–∏–π –Ω–æ–º–µ—Ä'},'items':[]}
            }
            if len(pars_file['stat']['stat-link'])>0:
                for i in range(5):
                    k = {
                        'button':{'text':pars_file['news']['news-titel'][i],'url':pars_file['news']['news-link'][i]},
                        'title':pars_file['news']['news-titel'][i],
                        'tts':str(pars_file['stat']['stat-titel'][i])+'. '+str(pars_file['stat']['stat-lid'][i]),
                        'image_id':pars_file['news']['news-imgId'][i]}
                    last_news['card']['items'].append(k)
                res['response'].update(last_news)
            else:
                res['response']['text'] = '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ–º–µ—Ä –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤üò•'

        elif  text == '–ü–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏' or text == '–ø–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏' or text == '–ù–æ–≤–æ—Å—Ç–∏' or text == '–Ω–æ–≤–æ—Å—Ç–∏'or text == '–ü–æ–∫–∞–∂–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏' or text == '–†–∞—Å–∫–∞–∂–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏':
            with open('out_pars.json') as f:
                pars_file = json.load(f)
            last_news={'text':'–ü–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏',
                'card':{'type':'ItemsList','header':{'text':'–ü–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏'},'items':[]}
            }

            for i in range(5):
                k = {
                    'button':{'text':pars_file['news']['news-titel'][i],'url':pars_file['news']['news-link'][i]},
                    'title':pars_file['news']['news-titel'][i],
                    'tts':pars_file['news']['news-titel'][i],
                    'image_id':pars_file['news']['news-imgId'][i]}
                last_news['card']['items'].append(k)
            res['response'].update(last_news)

        elif text == '':
            ## –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º—Å—è
            hellp={'text':'–ü—Ä–∏–≤–µ—Ç, —è –Ω–∞–≤—ã–∫ –≥–∞–∑–µ—Ç—ã–†–ë','card':{'type':'ItemsList','header':{'text':'–ü—Ä–∏–≤–µ—Ç, —è –Ω–∞–≤—ã–∫ –≥–∞–∑–µ—Ç—ã–†–ëüî•üî•üî•','tts':'–ü—Ä–∏–≤–µ—Ç, —è –Ω–∞–≤—ã–∫ –≥–∞–∑–µ—Ç—ã–†–ë'},
                'items':[
                    {'button':{'text':'–°–ª—É—á–∞–π–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å','payload':{'text':'–°–ª—É—á–∞–π–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å'}},
                        'title':'–°–ª—É—á–∞–π–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—åüé≤',
                        'tts':'–°–ª—É—á–∞–π–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å, –ø–æ–∫–∞–∑—ã–≤–∞–∞–µ—Ç –æ–¥–Ω—É –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π',
                    },
                    {'button':{'text':'–ü–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏','payload':{'text':'–ü–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏'}},
                        'title':'–ü–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏üïê',
                        'tts':'–ü–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏, –ø–æ–∫–∞–∂–µ—Ç –ø—è—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π',
                    },
                    {'button':{'text':'–°–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–º–µ—Ä','payload':{'text':'–°–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–º–µ—Ä'}},
                        'title':'–°–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–º–µ—ÄüëÄ',
                        'tts':'–°–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–º–µ—Ä, –∑–∞—á–∏—Ç–∞–µ—Ç –∑–∞–≥–∞–ª–æ–≤–∫–∏ —Å–∞–º—ã—Ö –∏–Ω—Ç–µ—Ä—Å–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–æ–º–µ—Ä–∞',
                    },
                ]
            }}
            res['response'].update(hellp)
        else:
            ## –ï—Å–ª–∏ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ
            hellp={'text':'–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é','card':{'type':'ItemsList','header':{'text':'–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é','tts':'–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é'},
                'items':[
                    {'button':{'text':'–°–ª—É—á–∞–π–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å','payload':{'text':'–°–ª—É—á–∞–π–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å'}},
                        'title':'–°–ª—É—á–∞–π–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—åüé≤',
                        'tts':'–°–ª—É—á–∞–π–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å, –ø–æ–∫–∞–∑—ã–≤–∞–∞–µ—Ç –æ–¥–Ω—É –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π',
                    },
                    {'button':{'text':'–ü–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏','payload':{'text':'–ü–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏'}},
                        'title':'–ü–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏üïê',
                        'tts':'–ü–æ—Å–ª–µ–¥–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏, –ø–æ–∫–∞–∂–µ—Ç –ø—è—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π',
                    },
                    {'button':{'text':'–°–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–º–µ—Ä','payload':{'text':'–°–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–º–µ—Ä'}},
                        'title':'–°–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–º–µ—ÄüëÄ',
                        'tts':'–°–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–º–µ—Ä, –∑–∞—á–∏—Ç–∞–µ—Ç –∑–∞–≥–∞–ª–æ–≤–∫–∏ —Å–∞–º—ã—Ö –∏–Ω—Ç–µ—Ä—Å–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–æ–º–µ—Ä–∞',
                    },
                ]
            }}
            res['response'].update(hellp)

if __name__ == '__main__':
    app.run()